name: POI CICD

env:
  poi_path: apis/poi/**
  registry: docker.pkg.github.com
  repository: hattan/opnehack-devops-team-gh/api-poi
  docker_path: apis/poi/web
  staging_url: https://openhackgoa9se38poi-staging.azurewebsites.net
  prod_url: https://openhackgoa9se38poi.azurewebsites.net
  resource_group: openhackgoa9se38rg
  webapp_name: openhackgoa9se38poi
  build_name: POI
  AZURE_WEBAPP_PACKAGE_PATH: '.' 

on:
  push:
    branches: [ master ]
    paths:
      - apis/poi/**
      - .github/workflows/poi.yml
#  pull_request:
#    branches: [ master ]
#    paths:
#      - apis/poi/**
#      - .github/workflows/poi.yml

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1'

      - name: Add code coverage tools
        working-directory: apis/poi/tests/UnitTests
        run: dotnet add package coverlet.msbuild

      - name: Install dependencies
        run:  dotnet restore apis/poi/web/*.csproj

      - name: .NET Build web
        run: dotnet build --configuration Release --no-restore apis/poi/web/*.csproj

      - name: .NET Build unit tests
        run:  dotnet build --configuration Release --no-restore apis/poi/tests/UnitTests/UnitTests.csproj

      - name: .NET test
        run: dotnet test --no-restore --verbosity normal apis/poi/tests/UnitTests /p:CollectCoverage=true /p:CoverletOutput=lcov/ /p:CoverletOutputFormat=lcov

      

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: apis/poi/tests/UnitTests/lcov/coverage.info
          base-path: apis/poi
          flag-name: Unit


      - name: 'Checkout Github Action'
        uses: actions/checkout@master

      - uses: azure/docker-login@v1
        with:
            login-server: openhackgoa9se38acr.azurecr.io
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build '${{ env.docker_path }}' -t openhackgoa9se38acr.azurecr.io/poi-api-dotnet:${{ github.sha }}
          docker push openhackgoa9se38acr.azurecr.io/poi-api-dotnet:${{ github.sha }}

      - uses: azure/webapps-deploy@v2
        with:
          app-name: '${{ env.webapp_name }}'
          publish-profile: ${{ secrets.azureWebAppPublishProfile }}
          images: 'openhackgoa9se38acr.azurecr.io/poi-api-dotnet:${{ github.sha }}'
          #test comment

       
 

      

